#include "gtest/gtest.h"

#include "amf.hpp"
#include "types/amfdouble.hpp"

template <size_t N>
static void isEqual(u8 (&expected)[N], double value) {
	ASSERT_EQ(make_vector(expected), AmfDouble(value).serialize());
}

TEST(DoubleSerializationTest, SimpleValues) {
	u8 v1[] = { 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 };
	isEqual(v1, 0);
	u8 v2[] = { 0x05, 0x3F, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 };
	isEqual(v2, 0.5);
	u8 v3[] = { 0x05, 0xBF, 0xF3, 0x33, 0x33, 0x33, 0x33, 0x33, 0x33 };
	isEqual(v3, -1.2);
	u8 v4[] = { 0x05, 0x3F, 0xD5, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55 };
	isEqual(v4, 0.3333333333333333);
	u8 v5[] = { 0x05, 0xBF, 0xD5, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55 };
	isEqual(v5, -0.3333333333333333);
	u8 v6[] = { 0x05, 0x4A, 0x9A, 0xBA, 0x47, 0x14, 0x95, 0x7D, 0x30 };
	isEqual(v6, 2.5e+51);
	u8 v7[] = { 0x05, 0xCA, 0x9A, 0xBA, 0x47, 0x14, 0x95, 0x7D, 0x30 };
	isEqual(v7, -2.5e+51);
	u8 v8[] = { 0x05, 0x47, 0x37, 0xC6, 0xE3, 0xC0, 0x32, 0xF7, 0x20 };
	isEqual(v8, 1.2345678912345e+35);
	u8 v9[] = { 0x05, 0xC7, 0x37, 0xC6, 0xE3, 0xC0, 0x32, 0xF7, 0x20 };
	isEqual(v9, -1.2345678912345e+35);
	u8 v10[] = { 0x05, 0x42, 0x06, 0xFE, 0xE0, 0xE1, 0xA0, 0x00, 0x00 };
	isEqual(v10, 12345678900);
	u8 v11[] = { 0x05, 0x3D, 0xE0, 0xF7, 0xBF, 0xE5, 0xDB, 0x09, 0xEB };
	isEqual(v11, 1.23456789e-10);
	u8 v12[] = { 0x05, 0xC2, 0x06, 0xFE, 0xE0, 0xE1, 0xA0, 0x00, 0x00 };
	isEqual(v12, -12345678900);
	u8 v13[] = { 0x05, 0xBD, 0xE0, 0xF7, 0xBF, 0xE5, 0xDB, 0x09, 0xEB };
	isEqual(v13, -1.23456789e-10);
	u8 v14[] = { 0x05, 0x3F, 0xEA, 0x2E, 0x8B, 0xA2, 0xE8, 0xBA, 0x2F };
	isEqual(v14, 0.8181818181818182);
	u8 v15[] = { 0x05, 0x3F, 0xF3, 0x8E, 0x38, 0xE3, 0x8E, 0x38, 0xE4 };
	isEqual(v15, 1.2222222222222223);
	u8 v16[] = { 0x05, 0x40, 0x09, 0x21, 0xF9, 0xF0, 0x1B, 0x86, 0x6E };
	isEqual(v16, 3.14159);
	u8 v17[] = { 0x05, 0xBF, 0xEA, 0x2E, 0x8B, 0xA2, 0xE8, 0xBA, 0x2F };
	isEqual(v17, -0.8181818181818182);
	u8 v18[] = { 0x05, 0xBF, 0xF3, 0x8E, 0x38, 0xE3, 0x8E, 0x38, 0xE4 };
	isEqual(v18, -1.2222222222222223);
	u8 v19[] = { 0x05, 0xC0, 0x09, 0x21, 0xF9, 0xF0, 0x1B, 0x86, 0x6E };
	isEqual(v19, -3.14159);
}
